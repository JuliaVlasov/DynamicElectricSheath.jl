var documenterSearchIndex = {"docs":
[{"location":"","page":"DynamicElectricSheath","title":"DynamicElectricSheath","text":"CurrentModule = DynamicElectricSheath","category":"page"},{"location":"#DynamicElectricSheath","page":"DynamicElectricSheath","title":"DynamicElectricSheath","text":"","category":"section"},{"location":"","page":"DynamicElectricSheath","title":"DynamicElectricSheath","text":"Documentation for DynamicElectricSheath","category":"page"},{"location":"","page":"DynamicElectricSheath","title":"DynamicElectricSheath","text":"","category":"page"},{"location":"","page":"DynamicElectricSheath","title":"DynamicElectricSheath","text":"Modules = [DynamicElectricSheath]","category":"page"},{"location":"#DynamicElectricSheath.Discretization","page":"DynamicElectricSheath","title":"DynamicElectricSheath.Discretization","text":"struct Discretization\n\nGrid in velocity corresponds to the electronic one which contains the  support of boths ions and electron density function\n\nNx::Int64\nNumber of points of the space mesh\nNv::Int64\nNumber of points of the speed mesh\ndx::Float64\nSpace step\ndv::Float64\nSpeed step\nCFL_x::Float64\nCFL in x\nCFL_v::Float64\nCFL in v\nNt::Int64\nNumber of time steps\ndt::Float64\nTime step\n\n\n\n\n\n","category":"type"},{"location":"#DynamicElectricSheath.Physics","page":"DynamicElectricSheath","title":"DynamicElectricSheath.Physics","text":"struct Physics\n\nν::Float64\nCollision frequency Default: 20.0\nλ::Float64\nDebye length Default: 0.5\nT::Float64\nTime horizon Default: 10.0\nμ::Float64\nThermal speed Default: 0.5\nxmin::Float64\nLower bound space  Default: -1.0\nxmax::Float64\nUpper bound space  Default: 1.0\nvmin::Float64\nLower bound speed  Default: -10.0\nvmax::Float64\nUupper bound speed  Default: 10.0\n\n\n\n\n\n","category":"type"},{"location":"#DynamicElectricSheath.E0-Tuple{Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.E0","text":"E0(x)\n\n\nElectric field\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.advection!-NTuple{11, Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.advection!","text":"advection!(\n    fi,\n    fe,\n    vv_plus,\n    vv_minus,\n    EE_plus,\n    EE_minus,\n    nu,\n    mu,\n    dx,\n    dv,\n    dt\n)\n\n\nfracd f_idt + v fracd f_idx + E fracd f_idv = nu * f_e\n\n```math \\frac{d fe}{dt} + v \\frac{d fe}{dx} + \\frac{1}{\\mu] E \\frac{d f_e}{dv} = 0\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.compute_charge!-Tuple{Any, Any, Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.compute_charge!","text":"compute_charge!(rho, f, dv)\n\n\ncompute charge density\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.compute_current-NTuple{4, Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.compute_current","text":"compute_current(fi, fe, vv, dv)\n\n\ncompute current at boundaries : rectangle integration of \n\nint_v v * (fi(tpm 1v) - fe(tpm 1v)) dv\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.compute_e!-NTuple{7, Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.compute_e!","text":"compute_e!(EE, rho, lambda, J_l, J_r, dx, dt)\n\n\nUpdate electric field : use formula \n\nE(x) = 05*(E(1) + E(-1)) + nu2 * ( int_-1^x rho(y)dy - int_x^1 rho(y)dy )\n\nwith E(t^n+11) + E(t^n+1-1) approximated by E(t^n1) + E(t^n-1) + dtlambda^2 * (J_l + J_r) (Ampère boundary conditions)\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.fe_0-Tuple{Any, Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.fe_0","text":"fe_0(x, v; μ)\n\n\nElectrons distribution\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.fi_0-Tuple{Any, Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.fi_0","text":"fi_0(x, v; μ)\n\n\nIons distribution\n\n\n\n\n\n","category":"method"},{"location":"#DynamicElectricSheath.mask-Tuple{Any}","page":"DynamicElectricSheath","title":"DynamicElectricSheath.mask","text":"mask(x)\n\n\nInitial mask\n\n\n\n\n\n","category":"method"},{"location":"example/","page":"Example","title":"Example","text":"CurrentModule = DynamicElectricSheath","category":"page"},{"location":"example/#Example","page":"Example","title":"Example","text":"","category":"section"},{"location":"example/","page":"Example","title":"Example","text":"Set physical and numerical parameters","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"using DynamicElectricSheath\nusing Plots\n\nphysics = Physics()\n\nν = physics.ν\nλ = physics.λ\nT = physics.T\nμ = physics.μ\nxmin, xmax = physics.xmin, physics.xmax\nvmin, vmax = physics.vmin, physics.vmax\n\nnumerics = Discretization(physics)\n\nNt = numerics.Nt\ndt = numerics.dt\nCFL_x = numerics.CFL_x\nCFL_v = numerics.CFL_v\nNx = numerics.Nx\ndx = numerics.dx\nNv = numerics.Nv\ndv = numerics.dv\n\nprintln(\"Parameters : \")\nprintln(\"ν = $ν, λ = $λ, μ = $μ\")\nprintln(\"T = $T, Nt = $Nt, dt = $dt (CFL_x = $CFL_x, CFL_v = $CFL_v)\")\nprintln(\"[xmin,xmax] = [$xmin,$xmax], Nx = $Nx, dx = $dx\")\nprintln(\"[vmin,vmax] = [$vmin,$vmax], Nv = $Nv, dv = $dv\")","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"Set mesh grid ","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"xx = LinRange(xmin, xmax, Nx + 1)\nvv = LinRange(vmin, vmax, Nv + 1)\nvv_plus = vv .* (vv .> 0.0)\nvv_minus = vv .* (vv .< 0.0) ","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"Initialize fields","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"EE = E0.(xx)       \nfi = fi_0.(xx, vv')  \nfe = fe_0.(xx, vv') ","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"p = plot(layout=(1,2), size=(800,300))\ncontourf!(p[1], xx, vv, fi', label=\"ions\")\ncontourf!(p[2], xx, vv, fe', label=\"electrons\")","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"ρ = zeros(Nx + 1)       # charge density\nρi = zeros(Nx + 1)        # ion charge density\nρe = zeros(Nx + 1)        # electron charge density\ncompute_charge!(ρi, fi, dv)\ncompute_charge!(ρe, fe, dv)\ncompute_charge!(ρ, fi .- fe, dv)\nplot(xx, ρ)","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"# Boundary conditions (all 0, never updated afterwards)\nfi[begin, :] .= 0.0\nfi[end, :] .= 0.0 # speed distribution is almost 0 \nfi[:, begin] .= 0.0\nfi[:, end] .= 0.0 # non-emmiting wall\nfe[begin, :] .= 0.0\nfe[end, :] .= 0.0 # speed distribution is almost 0 \nfe[:, begin] .= 0.0\nfe[:, end] .= 0.0 # non-emmiting wall\n\n\nfor n = 1:Nt # loop over time\n\n    compute_charge!(ρi, fi, dv)\n    compute_charge!(ρe, fe, dv)\n    compute_charge!(ρ, fi .- fe, dv)\n\n    J_l, J_r = compute_current(fi, fe, vv, dv)\n\n    EE_minus, EE_plus = compute_e!(EE, ρ, λ, J_l, J_r, dx, dt)\n\n    advection!(fi, fe, vv_plus, vv_minus, EE_plus, EE_minus, ν, μ, dx, dv, dt)\n\nend\n","category":"page"}]
}
